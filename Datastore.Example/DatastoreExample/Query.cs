// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1beta3/query.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Datastore.V1Beta3 {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Query {

      #region Descriptor
      public static pbr::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbr::FileDescriptor descriptor;

      static Query() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "CiRnb29nbGUvZGF0YXN0b3JlL3YxYmV0YTMvcXVlcnkucHJvdG8SGGdvb2ds", 
              "ZS5kYXRhc3RvcmUudjFiZXRhMxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5w", 
              "cm90bxolZ29vZ2xlL2RhdGFzdG9yZS92MWJldGEzL2VudGl0eS5wcm90bxoe", 
              "Z29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvIqMBCgxFbnRpdHlSZXN1", 
              "bHQSMAoGZW50aXR5GAEgASgLMiAuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEz", 
              "LkVudGl0eRIOCgZjdXJzb3IYAyABKAwiUQoKUmVzdWx0VHlwZRIbChdSRVNV", 
              "TFRfVFlQRV9VTlNQRUNJRklFRBAAEggKBEZVTEwQARIOCgpQUk9KRUNUSU9O", 
              "EAISDAoIS0VZX09OTFkQAyKLAwoFUXVlcnkSOAoKcHJvamVjdGlvbhgCIAMo", 
              "CzIkLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5Qcm9qZWN0aW9uEjYKBGtp", 
              "bmQYAyADKAsyKC5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTMuS2luZEV4cHJl", 
              "c3Npb24SMAoGZmlsdGVyGAQgASgLMiAuZ29vZ2xlLmRhdGFzdG9yZS52MWJl", 
              "dGEzLkZpbHRlchI2CgVvcmRlchgFIAMoCzInLmdvb2dsZS5kYXRhc3RvcmUu", 
              "djFiZXRhMy5Qcm9wZXJ0eU9yZGVyEkAKC2Rpc3RpbmN0X29uGAYgAygLMisu", 
              "Z29vZ2xlLmRhdGFzdG9yZS52MWJldGEzLlByb3BlcnR5UmVmZXJlbmNlEhQK", 
              "DHN0YXJ0X2N1cnNvchgHIAEoDBISCgplbmRfY3Vyc29yGAggASgMEg4KBm9m", 
              "ZnNldBgKIAEoBRIqCgVsaW1pdBgMIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J", 
              "bnQzMlZhbHVlIh4KDktpbmRFeHByZXNzaW9uEgwKBG5hbWUYASABKAkiIQoR", 
              "UHJvcGVydHlSZWZlcmVuY2USDAoEbmFtZRgCIAEoCSJLCgpQcm9qZWN0aW9u", 
              "Ej0KCHByb3BlcnR5GAEgASgLMisuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEz", 
              "LlByb3BlcnR5UmVmZXJlbmNlItsBCg1Qcm9wZXJ0eU9yZGVyEj0KCHByb3Bl", 
              "cnR5GAEgASgLMisuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEzLlByb3BlcnR5", 
              "UmVmZXJlbmNlEkQKCWRpcmVjdGlvbhgCIAEoDjIxLmdvb2dsZS5kYXRhc3Rv", 
              "cmUudjFiZXRhMy5Qcm9wZXJ0eU9yZGVyLkRpcmVjdGlvbiJFCglEaXJlY3Rp", 
              "b24SGQoVRElSRUNUSU9OX1VOU1BFQ0lGSUVEEAASDQoJQVNDRU5ESU5HEAES", 
              "DgoKREVTQ0VORElORxACIqMBCgZGaWx0ZXISRQoQY29tcG9zaXRlX2ZpbHRl", 
              "chgBIAEoCzIpLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5Db21wb3NpdGVG", 
              "aWx0ZXJIABJDCg9wcm9wZXJ0eV9maWx0ZXIYAiABKAsyKC5nb29nbGUuZGF0", 
              "YXN0b3JlLnYxYmV0YTMuUHJvcGVydHlGaWx0ZXJIAEINCgtmaWx0ZXJfdHlw", 
              "ZSKzAQoPQ29tcG9zaXRlRmlsdGVyEj4KAm9wGAEgASgOMjIuZ29vZ2xlLmRh", 
              "dGFzdG9yZS52MWJldGEzLkNvbXBvc2l0ZUZpbHRlci5PcGVyYXRvchIxCgdm", 
              "aWx0ZXJzGAIgAygLMiAuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEzLkZpbHRl", 
              "ciItCghPcGVyYXRvchIYChRPUEVSQVRPUl9VTlNQRUNJRklFRBAAEgcKA0FO", 
              "RBABItYCCg5Qcm9wZXJ0eUZpbHRlchI9Cghwcm9wZXJ0eRgBIAEoCzIrLmdv", 
              "b2dsZS5kYXRhc3RvcmUudjFiZXRhMy5Qcm9wZXJ0eVJlZmVyZW5jZRI9CgJv", 
              "cBgCIAEoDjIxLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5Qcm9wZXJ0eUZp", 
              "bHRlci5PcGVyYXRvchIuCgV2YWx1ZRgDIAEoCzIfLmdvb2dsZS5kYXRhc3Rv", 
              "cmUudjFiZXRhMy5WYWx1ZSKVAQoIT3BlcmF0b3ISGAoUT1BFUkFUT1JfVU5T", 
              "UEVDSUZJRUQQABINCglMRVNTX1RIQU4QARIWChJMRVNTX1RIQU5fT1JfRVFV", 
              "QUwQAhIQCgxHUkVBVEVSX1RIQU4QAxIZChVHUkVBVEVSX1RIQU5fT1JfRVFV", 
              "QUwQBBIJCgVFUVVBTBAFEhAKDEhBU19BTkNFU1RPUhALIrQCCghHcWxRdWVy", 
              "eRIUCgxxdWVyeV9zdHJpbmcYASABKAkSFgoOYWxsb3dfbGl0ZXJhbHMYAiAB", 
              "KAgSTQoObmFtZWRfYmluZGluZ3MYBSADKAsyNS5nb29nbGUuZGF0YXN0b3Jl", 
              "LnYxYmV0YTMuR3FsUXVlcnkuTmFtZWRCaW5kaW5nc0VudHJ5EkgKE3Bvc2l0", 
              "aW9uYWxfYmluZGluZ3MYBCADKAsyKy5nb29nbGUuZGF0YXN0b3JlLnYxYmV0", 
              "YTMuR3FsUXVlcnlQYXJhbWV0ZXIaYQoSTmFtZWRCaW5kaW5nc0VudHJ5EgsK", 
              "A2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLmdvb2dsZS5kYXRhc3RvcmUu", 
              "djFiZXRhMy5HcWxRdWVyeVBhcmFtZXRlcjoCOAEiaQoRR3FsUXVlcnlQYXJh", 
              "bWV0ZXISMAoFdmFsdWUYAiABKAsyHy5nb29nbGUuZGF0YXN0b3JlLnYxYmV0", 
              "YTMuVmFsdWVIABIQCgZjdXJzb3IYAyABKAxIAEIQCg5wYXJhbWV0ZXJfdHlw", 
              "ZSLTAwoQUXVlcnlSZXN1bHRCYXRjaBIXCg9za2lwcGVkX3Jlc3VsdHMYBiAB", 
              "KAUSFgoOc2tpcHBlZF9jdXJzb3IYAyABKAwSTQoSZW50aXR5X3Jlc3VsdF90", 
              "eXBlGAEgASgOMjEuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEzLkVudGl0eVJl", 
              "c3VsdC5SZXN1bHRUeXBlEj4KDmVudGl0eV9yZXN1bHRzGAIgAygLMiYuZ29v", 
              "Z2xlLmRhdGFzdG9yZS52MWJldGEzLkVudGl0eVJlc3VsdBISCgplbmRfY3Vy", 
              "c29yGAQgASgMElAKDG1vcmVfcmVzdWx0cxgFIAEoDjI6Lmdvb2dsZS5kYXRh", 
              "c3RvcmUudjFiZXRhMy5RdWVyeVJlc3VsdEJhdGNoLk1vcmVSZXN1bHRzVHlw", 
              "ZSKYAQoPTW9yZVJlc3VsdHNUeXBlEiEKHU1PUkVfUkVTVUxUU19UWVBFX1VO", 
              "U1BFQ0lGSUVEEAASEAoMTk9UX0ZJTklTSEVEEAESHAoYTU9SRV9SRVNVTFRT", 
              "X0FGVEVSX0xJTUlUEAISHQoZTU9SRV9SRVNVTFRTX0FGVEVSX0NVUlNPUhAE", 
              "EhMKD05PX01PUkVfUkVTVUxUUxADQiwKHGNvbS5nb29nbGUuZGF0YXN0b3Jl", 
              "LnYxYmV0YTNCClF1ZXJ5UHJvdG9QAWIGcHJvdG8z"));
        descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbr::FileDescriptor[] { global::Google.Api.Annotations.Descriptor, global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor, global::Google.Protobuf.WellKnownTypes.Wrappers.Descriptor, },
            new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.EntityResult), new[]{ "Entity", "Cursor" }, null, new[]{ typeof(global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType) }, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Query), new[]{ "Projection", "Kind", "Filter", "Order", "DistinctOn", "StartCursor", "EndCursor", "Offset", "Limit" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.KindExpression), new[]{ "Name" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.PropertyReference), new[]{ "Name" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Projection), new[]{ "Property" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.PropertyOrder), new[]{ "Property", "Direction" }, null, new[]{ typeof(global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction) }, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Filter), new[]{ "CompositeFilter", "PropertyFilter" }, new[]{ "FilterType" }, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.CompositeFilter), new[]{ "Op", "Filters" }, null, new[]{ typeof(global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator) }, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.PropertyFilter), new[]{ "Property", "Op", "Value" }, null, new[]{ typeof(global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator) }, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.GqlQuery), new[]{ "QueryString", "AllowLiterals", "NamedBindings", "PositionalBindings" }, null, null, new pbr::GeneratedCodeInfo[] { null, }),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.GqlQueryParameter), new[]{ "Value", "Cursor" }, new[]{ "ParameterType" }, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.QueryResultBatch), new[]{ "SkippedResults", "SkippedCursor", "EntityResultType", "EntityResults", "EndCursor", "MoreResults" }, null, new[]{ typeof(global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType) }, null)
            }));
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntityResult : pb::IMessage<EntityResult> {
    private static readonly pb::MessageParser<EntityResult> _parser = new pb::MessageParser<EntityResult>(() => new EntityResult());
    public static pb::MessageParser<EntityResult> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EntityResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EntityResult(EntityResult other) : this() {
      Entity = other.entity_ != null ? other.Entity.Clone() : null;
      cursor_ = other.cursor_;
    }

    public EntityResult Clone() {
      return new EntityResult(this);
    }

    public const int EntityFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.Entity entity_;
    public global::Google.Datastore.V1Beta3.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    public const int CursorFieldNumber = 3;
    private pb::ByteString cursor_ = pb::ByteString.Empty;
    public pb::ByteString Cursor {
      get { return cursor_; }
      set {
        cursor_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EntityResult);
    }

    public bool Equals(EntityResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if (Cursor != other.Cursor) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Cursor);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (Cursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cursor);
      }
      return size;
    }

    public void MergeFrom(EntityResult other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Google.Datastore.V1Beta3.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.Cursor.Length != 0) {
        Cursor = other.Cursor;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entity_ == null) {
              entity_ = new global::Google.Datastore.V1Beta3.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
          case 26: {
            Cursor = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ResultType {
        RESULT_TYPE_UNSPECIFIED = 0,
        FULL = 1,
        PROJECTION = 2,
        KEY_ONLY = 3,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Query(Query other) : this() {
      projection_ = other.projection_.Clone();
      kind_ = other.kind_.Clone();
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
      order_ = other.order_.Clone();
      distinctOn_ = other.distinctOn_.Clone();
      startCursor_ = other.startCursor_;
      endCursor_ = other.endCursor_;
      offset_ = other.offset_;
      Limit = other.Limit;
    }

    public Query Clone() {
      return new Query(this);
    }

    public const int ProjectionFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.Projection> _repeated_projection_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.Projection.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.Projection> projection_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.Projection>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.Projection> Projection {
      get { return projection_; }
    }

    public const int KindFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.KindExpression> _repeated_kind_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Datastore.V1Beta3.KindExpression.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.KindExpression> kind_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.KindExpression>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.KindExpression> Kind {
      get { return kind_; }
    }

    public const int FilterFieldNumber = 4;
    private global::Google.Datastore.V1Beta3.Filter filter_;
    public global::Google.Datastore.V1Beta3.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    public const int OrderFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.PropertyOrder> _repeated_order_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Datastore.V1Beta3.PropertyOrder.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyOrder> order_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyOrder>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyOrder> Order {
      get { return order_; }
    }

    public const int DistinctOnFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.PropertyReference> _repeated_distinctOn_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Datastore.V1Beta3.PropertyReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyReference> distinctOn_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyReference>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.PropertyReference> DistinctOn {
      get { return distinctOn_; }
    }

    public const int StartCursorFieldNumber = 7;
    private pb::ByteString startCursor_ = pb::ByteString.Empty;
    public pb::ByteString StartCursor {
      get { return startCursor_; }
      set {
        startCursor_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int EndCursorFieldNumber = 8;
    private pb::ByteString endCursor_ = pb::ByteString.Empty;
    public pb::ByteString EndCursor {
      get { return endCursor_; }
      set {
        endCursor_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int OffsetFieldNumber = 10;
    private int offset_;
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    public const int LimitFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_limit_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? limit_;
    public int? Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!projection_.Equals(other.projection_)) return false;
      if(!kind_.Equals(other.kind_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if(!order_.Equals(other.order_)) return false;
      if(!distinctOn_.Equals(other.distinctOn_)) return false;
      if (StartCursor != other.StartCursor) return false;
      if (EndCursor != other.EndCursor) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= projection_.GetHashCode();
      hash ^= kind_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      hash ^= order_.GetHashCode();
      hash ^= distinctOn_.GetHashCode();
      if (StartCursor.Length != 0) hash ^= StartCursor.GetHashCode();
      if (EndCursor.Length != 0) hash ^= EndCursor.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (limit_ != null) hash ^= Limit.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      projection_.WriteTo(output, _repeated_projection_codec);
      kind_.WriteTo(output, _repeated_kind_codec);
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      order_.WriteTo(output, _repeated_order_codec);
      distinctOn_.WriteTo(output, _repeated_distinctOn_codec);
      if (StartCursor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(StartCursor);
      }
      if (EndCursor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(EndCursor);
      }
      if (Offset != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Offset);
      }
      if (limit_ != null) {
        _single_limit_codec.WriteTagAndValue(output, Limit);
      }
    }

    public int CalculateSize() {
      int size = 0;
      size += projection_.CalculateSize(_repeated_projection_codec);
      size += kind_.CalculateSize(_repeated_kind_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      size += order_.CalculateSize(_repeated_order_codec);
      size += distinctOn_.CalculateSize(_repeated_distinctOn_codec);
      if (StartCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartCursor);
      }
      if (EndCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndCursor);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (limit_ != null) {
        size += _single_limit_codec.CalculateSizeWithTag(Limit);
      }
      return size;
    }

    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      projection_.Add(other.projection_);
      kind_.Add(other.kind_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Google.Datastore.V1Beta3.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      order_.Add(other.order_);
      distinctOn_.Add(other.distinctOn_);
      if (other.StartCursor.Length != 0) {
        StartCursor = other.StartCursor;
      }
      if (other.EndCursor.Length != 0) {
        EndCursor = other.EndCursor;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.limit_ != null) {
        if (limit_ == null || other.Limit != 0) {
          Limit = other.Limit;
        }
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            projection_.AddEntriesFrom(input, _repeated_projection_codec);
            break;
          }
          case 26: {
            kind_.AddEntriesFrom(input, _repeated_kind_codec);
            break;
          }
          case 34: {
            if (filter_ == null) {
              filter_ = new global::Google.Datastore.V1Beta3.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 42: {
            order_.AddEntriesFrom(input, _repeated_order_codec);
            break;
          }
          case 50: {
            distinctOn_.AddEntriesFrom(input, _repeated_distinctOn_codec);
            break;
          }
          case 58: {
            StartCursor = input.ReadBytes();
            break;
          }
          case 66: {
            EndCursor = input.ReadBytes();
            break;
          }
          case 80: {
            Offset = input.ReadInt32();
            break;
          }
          case 98: {
            int? value = _single_limit_codec.Read(input);
            if (limit_ == null || value != 0) {
              Limit = value;
            }
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class KindExpression : pb::IMessage<KindExpression> {
    private static readonly pb::MessageParser<KindExpression> _parser = new pb::MessageParser<KindExpression>(() => new KindExpression());
    public static pb::MessageParser<KindExpression> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public KindExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    public KindExpression(KindExpression other) : this() {
      name_ = other.name_;
    }

    public KindExpression Clone() {
      return new KindExpression(this);
    }

    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as KindExpression);
    }

    public bool Equals(KindExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(KindExpression other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PropertyReference : pb::IMessage<PropertyReference> {
    private static readonly pb::MessageParser<PropertyReference> _parser = new pb::MessageParser<PropertyReference>(() => new PropertyReference());
    public static pb::MessageParser<PropertyReference> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PropertyReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PropertyReference(PropertyReference other) : this() {
      name_ = other.name_;
    }

    public PropertyReference Clone() {
      return new PropertyReference(this);
    }

    public const int NameFieldNumber = 2;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PropertyReference);
    }

    public bool Equals(PropertyReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    public void MergeFrom(PropertyReference other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Projection : pb::IMessage<Projection> {
    private static readonly pb::MessageParser<Projection> _parser = new pb::MessageParser<Projection>(() => new Projection());
    public static pb::MessageParser<Projection> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Projection() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Projection(Projection other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
    }

    public Projection Clone() {
      return new Projection(this);
    }

    public const int PropertyFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.PropertyReference property_;
    public global::Google.Datastore.V1Beta3.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Projection);
    }

    public bool Equals(Projection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      return size;
    }

    public void MergeFrom(Projection other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PropertyOrder : pb::IMessage<PropertyOrder> {
    private static readonly pb::MessageParser<PropertyOrder> _parser = new pb::MessageParser<PropertyOrder>(() => new PropertyOrder());
    public static pb::MessageParser<PropertyOrder> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[5]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PropertyOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PropertyOrder(PropertyOrder other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      direction_ = other.direction_;
    }

    public PropertyOrder Clone() {
      return new PropertyOrder(this);
    }

    public const int PropertyFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.PropertyReference property_;
    public global::Google.Datastore.V1Beta3.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    public const int DirectionFieldNumber = 2;
    private global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction direction_ = global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction.DIRECTION_UNSPECIFIED;
    public global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PropertyOrder);
    }

    public bool Equals(PropertyOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (Direction != other.Direction) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (Direction != global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction.DIRECTION_UNSPECIFIED) hash ^= Direction.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (Direction != global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction.DIRECTION_UNSPECIFIED) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (Direction != global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction.DIRECTION_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      return size;
    }

    public void MergeFrom(PropertyOrder other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.Direction != global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction.DIRECTION_UNSPECIFIED) {
        Direction = other.Direction;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
          case 16: {
            direction_ = (global::Google.Datastore.V1Beta3.PropertyOrder.Types.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Direction {
        DIRECTION_UNSPECIFIED = 0,
        ASCENDING = 1,
        DESCENDING = 2,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[6]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Filter(Filter other) : this() {
      switch (other.FilterTypeCase) {
        case FilterTypeOneofCase.CompositeFilter:
          CompositeFilter = other.CompositeFilter.Clone();
          break;
        case FilterTypeOneofCase.PropertyFilter:
          PropertyFilter = other.PropertyFilter.Clone();
          break;
      }

    }

    public Filter Clone() {
      return new Filter(this);
    }

    public const int CompositeFilterFieldNumber = 1;
    public global::Google.Datastore.V1Beta3.CompositeFilter CompositeFilter {
      get { return filterTypeCase_ == FilterTypeOneofCase.CompositeFilter ? (global::Google.Datastore.V1Beta3.CompositeFilter) filterType_ : null; }
      set {
        filterType_ = value;
        filterTypeCase_ = value == null ? FilterTypeOneofCase.None : FilterTypeOneofCase.CompositeFilter;
      }
    }

    public const int PropertyFilterFieldNumber = 2;
    public global::Google.Datastore.V1Beta3.PropertyFilter PropertyFilter {
      get { return filterTypeCase_ == FilterTypeOneofCase.PropertyFilter ? (global::Google.Datastore.V1Beta3.PropertyFilter) filterType_ : null; }
      set {
        filterType_ = value;
        filterTypeCase_ = value == null ? FilterTypeOneofCase.None : FilterTypeOneofCase.PropertyFilter;
      }
    }

    private object filterType_;
    public enum FilterTypeOneofCase {
      None = 0,
      CompositeFilter = 1,
      PropertyFilter = 2,
    }
    private FilterTypeOneofCase filterTypeCase_ = FilterTypeOneofCase.None;
    public FilterTypeOneofCase FilterTypeCase {
      get { return filterTypeCase_; }
    }

    public void ClearFilterType() {
      filterTypeCase_ = FilterTypeOneofCase.None;
      filterType_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompositeFilter, other.CompositeFilter)) return false;
      if (!object.Equals(PropertyFilter, other.PropertyFilter)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) hash ^= CompositeFilter.GetHashCode();
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) hash ^= PropertyFilter.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(CompositeFilter);
      }
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
        output.WriteRawTag(18);
        output.WriteMessage(PropertyFilter);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompositeFilter);
      }
      if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyFilter);
      }
      return size;
    }

    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      switch (other.FilterTypeCase) {
        case FilterTypeOneofCase.CompositeFilter:
          CompositeFilter = other.CompositeFilter;
          break;
        case FilterTypeOneofCase.PropertyFilter:
          PropertyFilter = other.PropertyFilter;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Google.Datastore.V1Beta3.CompositeFilter subBuilder = new global::Google.Datastore.V1Beta3.CompositeFilter();
            if (filterTypeCase_ == FilterTypeOneofCase.CompositeFilter) {
              subBuilder.MergeFrom(CompositeFilter);
            }
            input.ReadMessage(subBuilder);
            CompositeFilter = subBuilder;
            break;
          }
          case 18: {
            global::Google.Datastore.V1Beta3.PropertyFilter subBuilder = new global::Google.Datastore.V1Beta3.PropertyFilter();
            if (filterTypeCase_ == FilterTypeOneofCase.PropertyFilter) {
              subBuilder.MergeFrom(PropertyFilter);
            }
            input.ReadMessage(subBuilder);
            PropertyFilter = subBuilder;
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompositeFilter : pb::IMessage<CompositeFilter> {
    private static readonly pb::MessageParser<CompositeFilter> _parser = new pb::MessageParser<CompositeFilter>(() => new CompositeFilter());
    public static pb::MessageParser<CompositeFilter> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[7]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CompositeFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CompositeFilter(CompositeFilter other) : this() {
      op_ = other.op_;
      filters_ = other.filters_.Clone();
    }

    public CompositeFilter Clone() {
      return new CompositeFilter(this);
    }

    public const int OpFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator op_ = global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator.OPERATOR_UNSPECIFIED;
    public global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    public const int FiltersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.Filter.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.Filter> filters_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.Filter>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.Filter> Filters {
      get { return filters_; }
    }

    public override bool Equals(object other) {
      return Equals(other as CompositeFilter);
    }

    public bool Equals(CompositeFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if(!filters_.Equals(other.filters_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Op != global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator.OPERATOR_UNSPECIFIED) hash ^= Op.GetHashCode();
      hash ^= filters_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      filters_.WriteTo(output, _repeated_filters_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Op != global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      size += filters_.CalculateSize(_repeated_filters_codec);
      return size;
    }

    public void MergeFrom(CompositeFilter other) {
      if (other == null) {
        return;
      }
      if (other.Op != global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        Op = other.Op;
      }
      filters_.Add(other.filters_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            op_ = (global::Google.Datastore.V1Beta3.CompositeFilter.Types.Operator) input.ReadEnum();
            break;
          }
          case 18: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Operator {
        OPERATOR_UNSPECIFIED = 0,
        AND = 1,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PropertyFilter : pb::IMessage<PropertyFilter> {
    private static readonly pb::MessageParser<PropertyFilter> _parser = new pb::MessageParser<PropertyFilter>(() => new PropertyFilter());
    public static pb::MessageParser<PropertyFilter> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[8]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PropertyFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PropertyFilter(PropertyFilter other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      op_ = other.op_;
      Value = other.value_ != null ? other.Value.Clone() : null;
    }

    public PropertyFilter Clone() {
      return new PropertyFilter(this);
    }

    public const int PropertyFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.PropertyReference property_;
    public global::Google.Datastore.V1Beta3.PropertyReference Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    public const int OpFieldNumber = 2;
    private global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator op_ = global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator.OPERATOR_UNSPECIFIED;
    public global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    public const int ValueFieldNumber = 3;
    private global::Google.Datastore.V1Beta3.Value value_;
    public global::Google.Datastore.V1Beta3.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PropertyFilter);
    }

    public bool Equals(PropertyFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (Op != other.Op) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (Op != global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator.OPERATOR_UNSPECIFIED) hash ^= Op.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (Op != global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Op);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (Op != global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      return size;
    }

    public void MergeFrom(PropertyFilter other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.Op != global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator.OPERATOR_UNSPECIFIED) {
        Op = other.Op;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Datastore.V1Beta3.Value();
        }
        Value.MergeFrom(other.Value);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::Google.Datastore.V1Beta3.PropertyReference();
            }
            input.ReadMessage(property_);
            break;
          }
          case 16: {
            op_ = (global::Google.Datastore.V1Beta3.PropertyFilter.Types.Operator) input.ReadEnum();
            break;
          }
          case 26: {
            if (value_ == null) {
              value_ = new global::Google.Datastore.V1Beta3.Value();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Operator {
        OPERATOR_UNSPECIFIED = 0,
        LESS_THAN = 1,
        LESS_THAN_OR_EQUAL = 2,
        GREATER_THAN = 3,
        GREATER_THAN_OR_EQUAL = 4,
        EQUAL = 5,
        HAS_ANCESTOR = 11,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GqlQuery : pb::IMessage<GqlQuery> {
    private static readonly pb::MessageParser<GqlQuery> _parser = new pb::MessageParser<GqlQuery>(() => new GqlQuery());
    public static pb::MessageParser<GqlQuery> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[9]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GqlQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GqlQuery(GqlQuery other) : this() {
      queryString_ = other.queryString_;
      allowLiterals_ = other.allowLiterals_;
      namedBindings_ = other.namedBindings_.Clone();
      positionalBindings_ = other.positionalBindings_.Clone();
    }

    public GqlQuery Clone() {
      return new GqlQuery(this);
    }

    public const int QueryStringFieldNumber = 1;
    private string queryString_ = "";
    public string QueryString {
      get { return queryString_; }
      set {
        queryString_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int AllowLiteralsFieldNumber = 2;
    private bool allowLiterals_;
    public bool AllowLiterals {
      get { return allowLiterals_; }
      set {
        allowLiterals_ = value;
      }
    }

    public const int NamedBindingsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Google.Datastore.V1Beta3.GqlQueryParameter>.Codec _map_namedBindings_codec
        = new pbc::MapField<string, global::Google.Datastore.V1Beta3.GqlQueryParameter>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.GqlQueryParameter.Parser), 42);
    private readonly pbc::MapField<string, global::Google.Datastore.V1Beta3.GqlQueryParameter> namedBindings_ = new pbc::MapField<string, global::Google.Datastore.V1Beta3.GqlQueryParameter>();
    public pbc::MapField<string, global::Google.Datastore.V1Beta3.GqlQueryParameter> NamedBindings {
      get { return namedBindings_; }
    }

    public const int PositionalBindingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.GqlQueryParameter> _repeated_positionalBindings_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Datastore.V1Beta3.GqlQueryParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.GqlQueryParameter> positionalBindings_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.GqlQueryParameter>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.GqlQueryParameter> PositionalBindings {
      get { return positionalBindings_; }
    }

    public override bool Equals(object other) {
      return Equals(other as GqlQuery);
    }

    public bool Equals(GqlQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueryString != other.QueryString) return false;
      if (AllowLiterals != other.AllowLiterals) return false;
      if (!NamedBindings.Equals(other.NamedBindings)) return false;
      if(!positionalBindings_.Equals(other.positionalBindings_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (QueryString.Length != 0) hash ^= QueryString.GetHashCode();
      if (AllowLiterals != false) hash ^= AllowLiterals.GetHashCode();
      hash ^= NamedBindings.GetHashCode();
      hash ^= positionalBindings_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (QueryString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryString);
      }
      if (AllowLiterals != false) {
        output.WriteRawTag(16);
        output.WriteBool(AllowLiterals);
      }
      positionalBindings_.WriteTo(output, _repeated_positionalBindings_codec);
      namedBindings_.WriteTo(output, _map_namedBindings_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (QueryString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryString);
      }
      if (AllowLiterals != false) {
        size += 1 + 1;
      }
      size += namedBindings_.CalculateSize(_map_namedBindings_codec);
      size += positionalBindings_.CalculateSize(_repeated_positionalBindings_codec);
      return size;
    }

    public void MergeFrom(GqlQuery other) {
      if (other == null) {
        return;
      }
      if (other.QueryString.Length != 0) {
        QueryString = other.QueryString;
      }
      if (other.AllowLiterals != false) {
        AllowLiterals = other.AllowLiterals;
      }
      namedBindings_.Add(other.namedBindings_);
      positionalBindings_.Add(other.positionalBindings_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            QueryString = input.ReadString();
            break;
          }
          case 16: {
            AllowLiterals = input.ReadBool();
            break;
          }
          case 34: {
            positionalBindings_.AddEntriesFrom(input, _repeated_positionalBindings_codec);
            break;
          }
          case 42: {
            namedBindings_.AddEntriesFrom(input, _map_namedBindings_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GqlQueryParameter : pb::IMessage<GqlQueryParameter> {
    private static readonly pb::MessageParser<GqlQueryParameter> _parser = new pb::MessageParser<GqlQueryParameter>(() => new GqlQueryParameter());
    public static pb::MessageParser<GqlQueryParameter> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[10]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GqlQueryParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GqlQueryParameter(GqlQueryParameter other) : this() {
      switch (other.ParameterTypeCase) {
        case ParameterTypeOneofCase.Value:
          Value = other.Value.Clone();
          break;
        case ParameterTypeOneofCase.Cursor:
          Cursor = other.Cursor;
          break;
      }

    }

    public GqlQueryParameter Clone() {
      return new GqlQueryParameter(this);
    }

    public const int ValueFieldNumber = 2;
    public global::Google.Datastore.V1Beta3.Value Value {
      get { return parameterTypeCase_ == ParameterTypeOneofCase.Value ? (global::Google.Datastore.V1Beta3.Value) parameterType_ : null; }
      set {
        parameterType_ = value;
        parameterTypeCase_ = value == null ? ParameterTypeOneofCase.None : ParameterTypeOneofCase.Value;
      }
    }

    public const int CursorFieldNumber = 3;
    public pb::ByteString Cursor {
      get { return parameterTypeCase_ == ParameterTypeOneofCase.Cursor ? (pb::ByteString) parameterType_ : pb::ByteString.Empty; }
      set {
        parameterType_ = pb::Preconditions.CheckNotNull(value, "value");
        parameterTypeCase_ = ParameterTypeOneofCase.Cursor;
      }
    }

    private object parameterType_;
    public enum ParameterTypeOneofCase {
      None = 0,
      Value = 2,
      Cursor = 3,
    }
    private ParameterTypeOneofCase parameterTypeCase_ = ParameterTypeOneofCase.None;
    public ParameterTypeOneofCase ParameterTypeCase {
      get { return parameterTypeCase_; }
    }

    public void ClearParameterType() {
      parameterTypeCase_ = ParameterTypeOneofCase.None;
      parameterType_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as GqlQueryParameter);
    }

    public bool Equals(GqlQueryParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Cursor != other.Cursor) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) hash ^= Value.GetHashCode();
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) hash ^= Cursor.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) {
        output.WriteRawTag(26);
        output.WriteBytes(Cursor);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (parameterTypeCase_ == ParameterTypeOneofCase.Cursor) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cursor);
      }
      return size;
    }

    public void MergeFrom(GqlQueryParameter other) {
      if (other == null) {
        return;
      }
      switch (other.ParameterTypeCase) {
        case ParameterTypeOneofCase.Value:
          Value = other.Value;
          break;
        case ParameterTypeOneofCase.Cursor:
          Cursor = other.Cursor;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            global::Google.Datastore.V1Beta3.Value subBuilder = new global::Google.Datastore.V1Beta3.Value();
            if (parameterTypeCase_ == ParameterTypeOneofCase.Value) {
              subBuilder.MergeFrom(Value);
            }
            input.ReadMessage(subBuilder);
            Value = subBuilder;
            break;
          }
          case 26: {
            Cursor = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryResultBatch : pb::IMessage<QueryResultBatch> {
    private static readonly pb::MessageParser<QueryResultBatch> _parser = new pb::MessageParser<QueryResultBatch>(() => new QueryResultBatch());
    public static pb::MessageParser<QueryResultBatch> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Query.Descriptor.MessageTypes[11]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public QueryResultBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    public QueryResultBatch(QueryResultBatch other) : this() {
      skippedResults_ = other.skippedResults_;
      skippedCursor_ = other.skippedCursor_;
      entityResultType_ = other.entityResultType_;
      entityResults_ = other.entityResults_.Clone();
      endCursor_ = other.endCursor_;
      moreResults_ = other.moreResults_;
    }

    public QueryResultBatch Clone() {
      return new QueryResultBatch(this);
    }

    public const int SkippedResultsFieldNumber = 6;
    private int skippedResults_;
    public int SkippedResults {
      get { return skippedResults_; }
      set {
        skippedResults_ = value;
      }
    }

    public const int SkippedCursorFieldNumber = 3;
    private pb::ByteString skippedCursor_ = pb::ByteString.Empty;
    public pb::ByteString SkippedCursor {
      get { return skippedCursor_; }
      set {
        skippedCursor_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int EntityResultTypeFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType entityResultType_ = global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType.RESULT_TYPE_UNSPECIFIED;
    public global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType EntityResultType {
      get { return entityResultType_; }
      set {
        entityResultType_ = value;
      }
    }

    public const int EntityResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.EntityResult> _repeated_entityResults_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.EntityResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.EntityResult> entityResults_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.EntityResult>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.EntityResult> EntityResults {
      get { return entityResults_; }
    }

    public const int EndCursorFieldNumber = 4;
    private pb::ByteString endCursor_ = pb::ByteString.Empty;
    public pb::ByteString EndCursor {
      get { return endCursor_; }
      set {
        endCursor_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int MoreResultsFieldNumber = 5;
    private global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType moreResults_ = global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType.MORE_RESULTS_TYPE_UNSPECIFIED;
    public global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType MoreResults {
      get { return moreResults_; }
      set {
        moreResults_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as QueryResultBatch);
    }

    public bool Equals(QueryResultBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkippedResults != other.SkippedResults) return false;
      if (SkippedCursor != other.SkippedCursor) return false;
      if (EntityResultType != other.EntityResultType) return false;
      if(!entityResults_.Equals(other.entityResults_)) return false;
      if (EndCursor != other.EndCursor) return false;
      if (MoreResults != other.MoreResults) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (SkippedResults != 0) hash ^= SkippedResults.GetHashCode();
      if (SkippedCursor.Length != 0) hash ^= SkippedCursor.GetHashCode();
      if (EntityResultType != global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType.RESULT_TYPE_UNSPECIFIED) hash ^= EntityResultType.GetHashCode();
      hash ^= entityResults_.GetHashCode();
      if (EndCursor.Length != 0) hash ^= EndCursor.GetHashCode();
      if (MoreResults != global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType.MORE_RESULTS_TYPE_UNSPECIFIED) hash ^= MoreResults.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityResultType != global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType.RESULT_TYPE_UNSPECIFIED) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EntityResultType);
      }
      entityResults_.WriteTo(output, _repeated_entityResults_codec);
      if (SkippedCursor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SkippedCursor);
      }
      if (EndCursor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(EndCursor);
      }
      if (MoreResults != global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType.MORE_RESULTS_TYPE_UNSPECIFIED) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MoreResults);
      }
      if (SkippedResults != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SkippedResults);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (SkippedResults != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkippedResults);
      }
      if (SkippedCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SkippedCursor);
      }
      if (EntityResultType != global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType.RESULT_TYPE_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityResultType);
      }
      size += entityResults_.CalculateSize(_repeated_entityResults_codec);
      if (EndCursor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EndCursor);
      }
      if (MoreResults != global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType.MORE_RESULTS_TYPE_UNSPECIFIED) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoreResults);
      }
      return size;
    }

    public void MergeFrom(QueryResultBatch other) {
      if (other == null) {
        return;
      }
      if (other.SkippedResults != 0) {
        SkippedResults = other.SkippedResults;
      }
      if (other.SkippedCursor.Length != 0) {
        SkippedCursor = other.SkippedCursor;
      }
      if (other.EntityResultType != global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType.RESULT_TYPE_UNSPECIFIED) {
        EntityResultType = other.EntityResultType;
      }
      entityResults_.Add(other.entityResults_);
      if (other.EndCursor.Length != 0) {
        EndCursor = other.EndCursor;
      }
      if (other.MoreResults != global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType.MORE_RESULTS_TYPE_UNSPECIFIED) {
        MoreResults = other.MoreResults;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            entityResultType_ = (global::Google.Datastore.V1Beta3.EntityResult.Types.ResultType) input.ReadEnum();
            break;
          }
          case 18: {
            entityResults_.AddEntriesFrom(input, _repeated_entityResults_codec);
            break;
          }
          case 26: {
            SkippedCursor = input.ReadBytes();
            break;
          }
          case 34: {
            EndCursor = input.ReadBytes();
            break;
          }
          case 40: {
            moreResults_ = (global::Google.Datastore.V1Beta3.QueryResultBatch.Types.MoreResultsType) input.ReadEnum();
            break;
          }
          case 48: {
            SkippedResults = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MoreResultsType {
        MORE_RESULTS_TYPE_UNSPECIFIED = 0,
        NOT_FINISHED = 1,
        MORE_RESULTS_AFTER_LIMIT = 2,
        MORE_RESULTS_AFTER_CURSOR = 4,
        NO_MORE_RESULTS = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
