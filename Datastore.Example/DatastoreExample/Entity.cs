// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1beta3/entity.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Datastore.V1Beta3 {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Entity {

      #region Descriptor
      public static pbr::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbr::FileDescriptor descriptor;

      static Entity() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "CiVnb29nbGUvZGF0YXN0b3JlL3YxYmV0YTMvZW50aXR5LnByb3RvEhhnb29n", 
              "bGUuZGF0YXN0b3JlLnYxYmV0YTMaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMu", 
              "cHJvdG8aHGdvb2dsZS9wcm90b2J1Zi9zdHJ1Y3QucHJvdG8aH2dvb2dsZS9w", 
              "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aGGdvb2dsZS90eXBlL2xhdGxuZy5w", 
              "cm90byI3CgtQYXJ0aXRpb25JZBISCgpwcm9qZWN0X2lkGAIgASgJEhQKDG5h", 
              "bWVzcGFjZV9pZBgEIAEoCSLBAQoDS2V5EjsKDHBhcnRpdGlvbl9pZBgBIAEo", 
              "CzIlLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5QYXJ0aXRpb25JZBI3CgRw", 
              "YXRoGAIgAygLMikuZ29vZ2xlLmRhdGFzdG9yZS52MWJldGEzLktleS5QYXRo", 
              "RWxlbWVudBpECgtQYXRoRWxlbWVudBIMCgRraW5kGAEgASgJEgwKAmlkGAIg", 
              "ASgDSAASDgoEbmFtZRgDIAEoCUgAQgkKB2lkX3R5cGUiPQoKQXJyYXlWYWx1", 
              "ZRIvCgZ2YWx1ZXMYASADKAsyHy5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTMu", 
              "VmFsdWUigAQKBVZhbHVlEjAKCm51bGxfdmFsdWUYCyABKA4yGi5nb29nbGUu", 
              "cHJvdG9idWYuTnVsbFZhbHVlSAASFwoNYm9vbGVhbl92YWx1ZRgBIAEoCEgA", 
              "EhcKDWludGVnZXJfdmFsdWUYAiABKANIABIWCgxkb3VibGVfdmFsdWUYAyAB", 
              "KAFIABI1Cg90aW1lc3RhbXBfdmFsdWUYCiABKAsyGi5nb29nbGUucHJvdG9i", 
              "dWYuVGltZXN0YW1wSAASMgoJa2V5X3ZhbHVlGAUgASgLMh0uZ29vZ2xlLmRh", 
              "dGFzdG9yZS52MWJldGEzLktleUgAEhYKDHN0cmluZ192YWx1ZRgRIAEoCUgA", 
              "EhQKCmJsb2JfdmFsdWUYEiABKAxIABIuCg9nZW9fcG9pbnRfdmFsdWUYCCAB", 
              "KAsyEy5nb29nbGUudHlwZS5MYXRMbmdIABI4CgxlbnRpdHlfdmFsdWUYBiAB", 
              "KAsyIC5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTMuRW50aXR5SAASOwoLYXJy", 
              "YXlfdmFsdWUYCSABKAsyJC5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTMuQXJy", 
              "YXlWYWx1ZUgAEg8KB21lYW5pbmcYDiABKAUSHAoUZXhjbHVkZV9mcm9tX2lu", 
              "ZGV4ZXMYEyABKAhCDAoKdmFsdWVfdHlwZSLOAQoGRW50aXR5EioKA2tleRgB", 
              "IAEoCzIdLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5LZXkSRAoKcHJvcGVy", 
              "dGllcxgDIAMoCzIwLmdvb2dsZS5kYXRhc3RvcmUudjFiZXRhMy5FbnRpdHku", 
              "UHJvcGVydGllc0VudHJ5GlIKD1Byb3BlcnRpZXNFbnRyeRILCgNrZXkYASAB", 
              "KAkSLgoFdmFsdWUYAiABKAsyHy5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTMu", 
              "VmFsdWU6AjgBQi0KHGNvbS5nb29nbGUuZGF0YXN0b3JlLnYxYmV0YTNCC0Vu", 
              "dGl0eVByb3RvUAFiBnByb3RvMw=="));
        descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbr::FileDescriptor[] { global::Google.Api.Annotations.Descriptor, global::Google.Protobuf.WellKnownTypes.Proto.Struct.Descriptor, global::Google.Protobuf.WellKnownTypes.Proto.Timestamp.Descriptor, global::Google.Type.Latlng.Descriptor, },
            new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.PartitionId), new[]{ "ProjectId", "NamespaceId" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Key), new[]{ "PartitionId", "Path" }, null, null, new pbr::GeneratedCodeInfo[] { new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Key.Types.PathElement), new[]{ "Kind", "Id", "Name" }, new[]{ "IdType" }, null, null)}),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.ArrayValue), new[]{ "Values" }, null, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Value), new[]{ "NullValue", "BooleanValue", "IntegerValue", "DoubleValue", "TimestampValue", "KeyValue", "StringValue", "BlobValue", "GeoPointValue", "EntityValue", "ArrayValue", "Meaning", "ExcludeFromIndexes" }, new[]{ "ValueType" }, null, null),
              new pbr::GeneratedCodeInfo(typeof(global::Google.Datastore.V1Beta3.Entity), new[]{ "Key", "Properties" }, null, null, new pbr::GeneratedCodeInfo[] { null, })
            }));
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PartitionId : pb::IMessage<PartitionId> {
    private static readonly pb::MessageParser<PartitionId> _parser = new pb::MessageParser<PartitionId>(() => new PartitionId());
    public static pb::MessageParser<PartitionId> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PartitionId() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PartitionId(PartitionId other) : this() {
      projectId_ = other.projectId_;
      namespaceId_ = other.namespaceId_;
    }

    public PartitionId Clone() {
      return new PartitionId(this);
    }

    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int NamespaceIdFieldNumber = 4;
    private string namespaceId_ = "";
    public string NamespaceId {
      get { return namespaceId_; }
      set {
        namespaceId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PartitionId);
    }

    public bool Equals(PartitionId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (NamespaceId != other.NamespaceId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (NamespaceId.Length != 0) hash ^= NamespaceId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (NamespaceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NamespaceId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (NamespaceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamespaceId);
      }
      return size;
    }

    public void MergeFrom(PartitionId other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.NamespaceId.Length != 0) {
        NamespaceId = other.NamespaceId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            NamespaceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Key : pb::IMessage<Key> {
    private static readonly pb::MessageParser<Key> _parser = new pb::MessageParser<Key>(() => new Key());
    public static pb::MessageParser<Key> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Key() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Key(Key other) : this() {
      PartitionId = other.partitionId_ != null ? other.PartitionId.Clone() : null;
      path_ = other.path_.Clone();
    }

    public Key Clone() {
      return new Key(this);
    }

    public const int PartitionIdFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.PartitionId partitionId_;
    public global::Google.Datastore.V1Beta3.PartitionId PartitionId {
      get { return partitionId_; }
      set {
        partitionId_ = value;
      }
    }

    public const int PathFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.Key.Types.PathElement> _repeated_path_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.Key.Types.PathElement.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.Key.Types.PathElement> path_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.Key.Types.PathElement>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.Key.Types.PathElement> Path {
      get { return path_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Key);
    }

    public bool Equals(Key other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartitionId, other.PartitionId)) return false;
      if(!path_.Equals(other.path_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (partitionId_ != null) hash ^= PartitionId.GetHashCode();
      hash ^= path_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (partitionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartitionId);
      }
      path_.WriteTo(output, _repeated_path_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (partitionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionId);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      return size;
    }

    public void MergeFrom(Key other) {
      if (other == null) {
        return;
      }
      if (other.partitionId_ != null) {
        if (partitionId_ == null) {
          partitionId_ = new global::Google.Datastore.V1Beta3.PartitionId();
        }
        PartitionId.MergeFrom(other.PartitionId);
      }
      path_.Add(other.path_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (partitionId_ == null) {
              partitionId_ = new global::Google.Datastore.V1Beta3.PartitionId();
            }
            input.ReadMessage(partitionId_);
            break;
          }
          case 18: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class PathElement : pb::IMessage<PathElement> {
        private static readonly pb::MessageParser<PathElement> _parser = new pb::MessageParser<PathElement>(() => new PathElement());
        public static pb::MessageParser<PathElement> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Datastore.V1Beta3.Key.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public PathElement() {
          OnConstruction();
        }

        partial void OnConstruction();

        public PathElement(PathElement other) : this() {
          kind_ = other.kind_;
          switch (other.IdTypeCase) {
            case IdTypeOneofCase.Id:
              Id = other.Id;
              break;
            case IdTypeOneofCase.Name:
              Name = other.Name;
              break;
          }

        }

        public PathElement Clone() {
          return new PathElement(this);
        }

        public const int KindFieldNumber = 1;
        private string kind_ = "";
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::Preconditions.CheckNotNull(value, "value");
          }
        }

        public const int IdFieldNumber = 2;
        public long Id {
          get { return idTypeCase_ == IdTypeOneofCase.Id ? (long) idType_ : 0L; }
          set {
            idType_ = value;
            idTypeCase_ = IdTypeOneofCase.Id;
          }
        }

        public const int NameFieldNumber = 3;
        public string Name {
          get { return idTypeCase_ == IdTypeOneofCase.Name ? (string) idType_ : ""; }
          set {
            idType_ = pb::Preconditions.CheckNotNull(value, "value");
            idTypeCase_ = IdTypeOneofCase.Name;
          }
        }

        private object idType_;
        public enum IdTypeOneofCase {
          None = 0,
          Id = 2,
          Name = 3,
        }
        private IdTypeOneofCase idTypeCase_ = IdTypeOneofCase.None;
        public IdTypeOneofCase IdTypeCase {
          get { return idTypeCase_; }
        }

        public void ClearIdType() {
          idTypeCase_ = IdTypeOneofCase.None;
          idType_ = null;
        }

        public override bool Equals(object other) {
          return Equals(other as PathElement);
        }

        public bool Equals(PathElement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (idTypeCase_ == IdTypeOneofCase.Id) hash ^= Id.GetHashCode();
          if (idTypeCase_ == IdTypeOneofCase.Name) hash ^= Name.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.Default.Format(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (idTypeCase_ == IdTypeOneofCase.Id) {
            output.WriteRawTag(16);
            output.WriteInt64(Id);
          }
          if (idTypeCase_ == IdTypeOneofCase.Name) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (idTypeCase_ == IdTypeOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
          }
          if (idTypeCase_ == IdTypeOneofCase.Name) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          return size;
        }

        public void MergeFrom(PathElement other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          switch (other.IdTypeCase) {
            case IdTypeOneofCase.Id:
              Id = other.Id;
              break;
            case IdTypeOneofCase.Name:
              Name = other.Name;
              break;
          }

        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 16: {
                Id = input.ReadInt64();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ArrayValue : pb::IMessage<ArrayValue> {
    private static readonly pb::MessageParser<ArrayValue> _parser = new pb::MessageParser<ArrayValue>(() => new ArrayValue());
    public static pb::MessageParser<ArrayValue> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ArrayValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ArrayValue(ArrayValue other) : this() {
      values_ = other.values_.Clone();
    }

    public ArrayValue Clone() {
      return new ArrayValue(this);
    }

    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Datastore.V1Beta3.Value> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Datastore.V1Beta3.Value.Parser);
    private readonly pbc::RepeatedField<global::Google.Datastore.V1Beta3.Value> values_ = new pbc::RepeatedField<global::Google.Datastore.V1Beta3.Value>();
    public pbc::RepeatedField<global::Google.Datastore.V1Beta3.Value> Values {
      get { return values_; }
    }

    public override bool Equals(object other) {
      return Equals(other as ArrayValue);
    }

    public bool Equals(ArrayValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    public void MergeFrom(ArrayValue other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Value : pb::IMessage<Value> {
    private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
    public static pb::MessageParser<Value> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Value() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Value(Value other) : this() {
      meaning_ = other.meaning_;
      excludeFromIndexes_ = other.excludeFromIndexes_;
      switch (other.ValueTypeCase) {
        case ValueTypeOneofCase.NullValue:
          NullValue = other.NullValue;
          break;
        case ValueTypeOneofCase.BooleanValue:
          BooleanValue = other.BooleanValue;
          break;
        case ValueTypeOneofCase.IntegerValue:
          IntegerValue = other.IntegerValue;
          break;
        case ValueTypeOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueTypeOneofCase.TimestampValue:
          TimestampValue = other.TimestampValue.Clone();
          break;
        case ValueTypeOneofCase.KeyValue:
          KeyValue = other.KeyValue.Clone();
          break;
        case ValueTypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueTypeOneofCase.BlobValue:
          BlobValue = other.BlobValue;
          break;
        case ValueTypeOneofCase.GeoPointValue:
          GeoPointValue = other.GeoPointValue.Clone();
          break;
        case ValueTypeOneofCase.EntityValue:
          EntityValue = other.EntityValue.Clone();
          break;
        case ValueTypeOneofCase.ArrayValue:
          ArrayValue = other.ArrayValue.Clone();
          break;
      }

    }

    public Value Clone() {
      return new Value(this);
    }

    public const int NullValueFieldNumber = 11;
    public global::Google.Protobuf.WellKnownTypes.NullValue NullValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.NullValue ? (global::Google.Protobuf.WellKnownTypes.NullValue) valueType_ : global::Google.Protobuf.WellKnownTypes.NullValue.NULL_VALUE; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.NullValue;
      }
    }

    public const int BooleanValueFieldNumber = 1;
    public bool BooleanValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.BooleanValue ? (bool) valueType_ : false; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.BooleanValue;
      }
    }

    public const int IntegerValueFieldNumber = 2;
    public long IntegerValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.IntegerValue ? (long) valueType_ : 0L; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.IntegerValue;
      }
    }

    public const int DoubleValueFieldNumber = 3;
    public double DoubleValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.DoubleValue ? (double) valueType_ : 0D; }
      set {
        valueType_ = value;
        valueTypeCase_ = ValueTypeOneofCase.DoubleValue;
      }
    }

    public const int TimestampValueFieldNumber = 10;
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.TimestampValue ? (global::Google.Protobuf.WellKnownTypes.Timestamp) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.TimestampValue;
      }
    }

    public const int KeyValueFieldNumber = 5;
    public global::Google.Datastore.V1Beta3.Key KeyValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.KeyValue ? (global::Google.Datastore.V1Beta3.Key) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.KeyValue;
      }
    }

    public const int StringValueFieldNumber = 17;
    public string StringValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.StringValue ? (string) valueType_ : ""; }
      set {
        valueType_ = pb::Preconditions.CheckNotNull(value, "value");
        valueTypeCase_ = ValueTypeOneofCase.StringValue;
      }
    }

    public const int BlobValueFieldNumber = 18;
    public pb::ByteString BlobValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.BlobValue ? (pb::ByteString) valueType_ : pb::ByteString.Empty; }
      set {
        valueType_ = pb::Preconditions.CheckNotNull(value, "value");
        valueTypeCase_ = ValueTypeOneofCase.BlobValue;
      }
    }

    public const int GeoPointValueFieldNumber = 8;
    public global::Google.Type.LatLng GeoPointValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.GeoPointValue ? (global::Google.Type.LatLng) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.GeoPointValue;
      }
    }

    public const int EntityValueFieldNumber = 6;
    public global::Google.Datastore.V1Beta3.Entity EntityValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.EntityValue ? (global::Google.Datastore.V1Beta3.Entity) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.EntityValue;
      }
    }

    public const int ArrayValueFieldNumber = 9;
    public global::Google.Datastore.V1Beta3.ArrayValue ArrayValue {
      get { return valueTypeCase_ == ValueTypeOneofCase.ArrayValue ? (global::Google.Datastore.V1Beta3.ArrayValue) valueType_ : null; }
      set {
        valueType_ = value;
        valueTypeCase_ = value == null ? ValueTypeOneofCase.None : ValueTypeOneofCase.ArrayValue;
      }
    }

    public const int MeaningFieldNumber = 14;
    private int meaning_;
    public int Meaning {
      get { return meaning_; }
      set {
        meaning_ = value;
      }
    }

    public const int ExcludeFromIndexesFieldNumber = 19;
    private bool excludeFromIndexes_;
    public bool ExcludeFromIndexes {
      get { return excludeFromIndexes_; }
      set {
        excludeFromIndexes_ = value;
      }
    }

    private object valueType_;
    public enum ValueTypeOneofCase {
      None = 0,
      NullValue = 11,
      BooleanValue = 1,
      IntegerValue = 2,
      DoubleValue = 3,
      TimestampValue = 10,
      KeyValue = 5,
      StringValue = 17,
      BlobValue = 18,
      GeoPointValue = 8,
      EntityValue = 6,
      ArrayValue = 9,
    }
    private ValueTypeOneofCase valueTypeCase_ = ValueTypeOneofCase.None;
    public ValueTypeOneofCase ValueTypeCase {
      get { return valueTypeCase_; }
    }

    public void ClearValueType() {
      valueTypeCase_ = ValueTypeOneofCase.None;
      valueType_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as Value);
    }

    public bool Equals(Value other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NullValue != other.NullValue) return false;
      if (BooleanValue != other.BooleanValue) return false;
      if (IntegerValue != other.IntegerValue) return false;
      if (DoubleValue != other.DoubleValue) return false;
      if (!object.Equals(TimestampValue, other.TimestampValue)) return false;
      if (!object.Equals(KeyValue, other.KeyValue)) return false;
      if (StringValue != other.StringValue) return false;
      if (BlobValue != other.BlobValue) return false;
      if (!object.Equals(GeoPointValue, other.GeoPointValue)) return false;
      if (!object.Equals(EntityValue, other.EntityValue)) return false;
      if (!object.Equals(ArrayValue, other.ArrayValue)) return false;
      if (Meaning != other.Meaning) return false;
      if (ExcludeFromIndexes != other.ExcludeFromIndexes) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (valueTypeCase_ == ValueTypeOneofCase.NullValue) hash ^= NullValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.IntegerValue) hash ^= IntegerValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.TimestampValue) hash ^= TimestampValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.KeyValue) hash ^= KeyValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.BlobValue) hash ^= BlobValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.GeoPointValue) hash ^= GeoPointValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.EntityValue) hash ^= EntityValue.GetHashCode();
      if (valueTypeCase_ == ValueTypeOneofCase.ArrayValue) hash ^= ArrayValue.GetHashCode();
      if (Meaning != 0) hash ^= Meaning.GetHashCode();
      if (ExcludeFromIndexes != false) hash ^= ExcludeFromIndexes.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (valueTypeCase_ == ValueTypeOneofCase.BooleanValue) {
        output.WriteRawTag(8);
        output.WriteBool(BooleanValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.IntegerValue) {
        output.WriteRawTag(16);
        output.WriteInt64(IntegerValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
        output.WriteRawTag(25);
        output.WriteDouble(DoubleValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.KeyValue) {
        output.WriteRawTag(42);
        output.WriteMessage(KeyValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.EntityValue) {
        output.WriteRawTag(50);
        output.WriteMessage(EntityValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.GeoPointValue) {
        output.WriteRawTag(66);
        output.WriteMessage(GeoPointValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.ArrayValue) {
        output.WriteRawTag(74);
        output.WriteMessage(ArrayValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.TimestampValue) {
        output.WriteRawTag(82);
        output.WriteMessage(TimestampValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.NullValue) {
        output.WriteRawTag(88);
        output.WriteEnum((int) NullValue);
      }
      if (Meaning != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Meaning);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
        output.WriteRawTag(138, 1);
        output.WriteString(StringValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BlobValue) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(BlobValue);
      }
      if (ExcludeFromIndexes != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ExcludeFromIndexes);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (valueTypeCase_ == ValueTypeOneofCase.NullValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NullValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BooleanValue) {
        size += 1 + 1;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.IntegerValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntegerValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (valueTypeCase_ == ValueTypeOneofCase.TimestampValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.KeyValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.StringValue) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.BlobValue) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(BlobValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.GeoPointValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoPointValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.EntityValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityValue);
      }
      if (valueTypeCase_ == ValueTypeOneofCase.ArrayValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrayValue);
      }
      if (Meaning != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Meaning);
      }
      if (ExcludeFromIndexes != false) {
        size += 2 + 1;
      }
      return size;
    }

    public void MergeFrom(Value other) {
      if (other == null) {
        return;
      }
      if (other.Meaning != 0) {
        Meaning = other.Meaning;
      }
      if (other.ExcludeFromIndexes != false) {
        ExcludeFromIndexes = other.ExcludeFromIndexes;
      }
      switch (other.ValueTypeCase) {
        case ValueTypeOneofCase.NullValue:
          NullValue = other.NullValue;
          break;
        case ValueTypeOneofCase.BooleanValue:
          BooleanValue = other.BooleanValue;
          break;
        case ValueTypeOneofCase.IntegerValue:
          IntegerValue = other.IntegerValue;
          break;
        case ValueTypeOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueTypeOneofCase.TimestampValue:
          TimestampValue = other.TimestampValue;
          break;
        case ValueTypeOneofCase.KeyValue:
          KeyValue = other.KeyValue;
          break;
        case ValueTypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueTypeOneofCase.BlobValue:
          BlobValue = other.BlobValue;
          break;
        case ValueTypeOneofCase.GeoPointValue:
          GeoPointValue = other.GeoPointValue;
          break;
        case ValueTypeOneofCase.EntityValue:
          EntityValue = other.EntityValue;
          break;
        case ValueTypeOneofCase.ArrayValue:
          ArrayValue = other.ArrayValue;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BooleanValue = input.ReadBool();
            break;
          }
          case 16: {
            IntegerValue = input.ReadInt64();
            break;
          }
          case 25: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 42: {
            global::Google.Datastore.V1Beta3.Key subBuilder = new global::Google.Datastore.V1Beta3.Key();
            if (valueTypeCase_ == ValueTypeOneofCase.KeyValue) {
              subBuilder.MergeFrom(KeyValue);
            }
            input.ReadMessage(subBuilder);
            KeyValue = subBuilder;
            break;
          }
          case 50: {
            global::Google.Datastore.V1Beta3.Entity subBuilder = new global::Google.Datastore.V1Beta3.Entity();
            if (valueTypeCase_ == ValueTypeOneofCase.EntityValue) {
              subBuilder.MergeFrom(EntityValue);
            }
            input.ReadMessage(subBuilder);
            EntityValue = subBuilder;
            break;
          }
          case 66: {
            global::Google.Type.LatLng subBuilder = new global::Google.Type.LatLng();
            if (valueTypeCase_ == ValueTypeOneofCase.GeoPointValue) {
              subBuilder.MergeFrom(GeoPointValue);
            }
            input.ReadMessage(subBuilder);
            GeoPointValue = subBuilder;
            break;
          }
          case 74: {
            global::Google.Datastore.V1Beta3.ArrayValue subBuilder = new global::Google.Datastore.V1Beta3.ArrayValue();
            if (valueTypeCase_ == ValueTypeOneofCase.ArrayValue) {
              subBuilder.MergeFrom(ArrayValue);
            }
            input.ReadMessage(subBuilder);
            ArrayValue = subBuilder;
            break;
          }
          case 82: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (valueTypeCase_ == ValueTypeOneofCase.TimestampValue) {
              subBuilder.MergeFrom(TimestampValue);
            }
            input.ReadMessage(subBuilder);
            TimestampValue = subBuilder;
            break;
          }
          case 88: {
            valueType_ = input.ReadEnum();
            valueTypeCase_ = ValueTypeOneofCase.NullValue;
            break;
          }
          case 112: {
            Meaning = input.ReadInt32();
            break;
          }
          case 138: {
            StringValue = input.ReadString();
            break;
          }
          case 146: {
            BlobValue = input.ReadBytes();
            break;
          }
          case 152: {
            ExcludeFromIndexes = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Entity : pb::IMessage<Entity> {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Datastore.V1Beta3.Proto.Entity.Descriptor.MessageTypes[4]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Entity(Entity other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      properties_ = other.properties_.Clone();
    }

    public Entity Clone() {
      return new Entity(this);
    }

    public const int KeyFieldNumber = 1;
    private global::Google.Datastore.V1Beta3.Key key_;
    public global::Google.Datastore.V1Beta3.Key Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Google.Datastore.V1Beta3.Value>.Codec _map_properties_codec
        = new pbc::MapField<string, global::Google.Datastore.V1Beta3.Value>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Datastore.V1Beta3.Value.Parser), 26);
    private readonly pbc::MapField<string, global::Google.Datastore.V1Beta3.Value> properties_ = new pbc::MapField<string, global::Google.Datastore.V1Beta3.Value>();
    public pbc::MapField<string, global::Google.Datastore.V1Beta3.Value> Properties {
      get { return properties_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= Properties.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      properties_.WriteTo(output, _map_properties_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      return size;
    }

    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::Google.Datastore.V1Beta3.Key();
        }
        Key.MergeFrom(other.Key);
      }
      properties_.Add(other.properties_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::Google.Datastore.V1Beta3.Key();
            }
            input.ReadMessage(key_);
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
