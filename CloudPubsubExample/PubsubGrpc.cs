// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/pubsub/v1/pubsub.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Pubsub.V1 {
  public static class Subscriber
  {
    static readonly string __ServiceName = "google.pubsub.v1.Subscriber";

    static readonly Marshaller<global::Google.Pubsub.V1.Subscription> __Marshaller_Subscription = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.Subscription.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.GetSubscriptionRequest> __Marshaller_GetSubscriptionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.GetSubscriptionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListSubscriptionsRequest> __Marshaller_ListSubscriptionsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListSubscriptionsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListSubscriptionsResponse> __Marshaller_ListSubscriptionsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListSubscriptionsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.DeleteSubscriptionRequest> __Marshaller_DeleteSubscriptionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.DeleteSubscriptionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ModifyAckDeadlineRequest> __Marshaller_ModifyAckDeadlineRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ModifyAckDeadlineRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.AcknowledgeRequest> __Marshaller_AcknowledgeRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.AcknowledgeRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.PullRequest> __Marshaller_PullRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.PullRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.PullResponse> __Marshaller_PullResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.PullResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ModifyPushConfigRequest> __Marshaller_ModifyPushConfigRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ModifyPushConfigRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Pubsub.V1.Subscription, global::Google.Pubsub.V1.Subscription> __Method_CreateSubscription = new Method<global::Google.Pubsub.V1.Subscription, global::Google.Pubsub.V1.Subscription>(
        MethodType.Unary,
        __ServiceName,
        "CreateSubscription",
        __Marshaller_Subscription,
        __Marshaller_Subscription);

    static readonly Method<global::Google.Pubsub.V1.GetSubscriptionRequest, global::Google.Pubsub.V1.Subscription> __Method_GetSubscription = new Method<global::Google.Pubsub.V1.GetSubscriptionRequest, global::Google.Pubsub.V1.Subscription>(
        MethodType.Unary,
        __ServiceName,
        "GetSubscription",
        __Marshaller_GetSubscriptionRequest,
        __Marshaller_Subscription);

    static readonly Method<global::Google.Pubsub.V1.ListSubscriptionsRequest, global::Google.Pubsub.V1.ListSubscriptionsResponse> __Method_ListSubscriptions = new Method<global::Google.Pubsub.V1.ListSubscriptionsRequest, global::Google.Pubsub.V1.ListSubscriptionsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListSubscriptions",
        __Marshaller_ListSubscriptionsRequest,
        __Marshaller_ListSubscriptionsResponse);

    static readonly Method<global::Google.Pubsub.V1.DeleteSubscriptionRequest, global::Google.Protobuf.Empty> __Method_DeleteSubscription = new Method<global::Google.Pubsub.V1.DeleteSubscriptionRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteSubscription",
        __Marshaller_DeleteSubscriptionRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Pubsub.V1.ModifyAckDeadlineRequest, global::Google.Protobuf.Empty> __Method_ModifyAckDeadline = new Method<global::Google.Pubsub.V1.ModifyAckDeadlineRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "ModifyAckDeadline",
        __Marshaller_ModifyAckDeadlineRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Pubsub.V1.AcknowledgeRequest, global::Google.Protobuf.Empty> __Method_Acknowledge = new Method<global::Google.Pubsub.V1.AcknowledgeRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Acknowledge",
        __Marshaller_AcknowledgeRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Pubsub.V1.PullRequest, global::Google.Pubsub.V1.PullResponse> __Method_Pull = new Method<global::Google.Pubsub.V1.PullRequest, global::Google.Pubsub.V1.PullResponse>(
        MethodType.Unary,
        __ServiceName,
        "Pull",
        __Marshaller_PullRequest,
        __Marshaller_PullResponse);

    static readonly Method<global::Google.Pubsub.V1.ModifyPushConfigRequest, global::Google.Protobuf.Empty> __Method_ModifyPushConfig = new Method<global::Google.Pubsub.V1.ModifyPushConfigRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "ModifyPushConfig",
        __Marshaller_ModifyPushConfigRequest,
        __Marshaller_Empty);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Pubsub.V1.Pubsub.Descriptor.Services[0]; }
    }

    // client interface
    public interface ISubscriberClient
    {
      global::Google.Pubsub.V1.Subscription CreateSubscription(global::Google.Pubsub.V1.Subscription request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.Subscription CreateSubscription(global::Google.Pubsub.V1.Subscription request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> CreateSubscriptionAsync(global::Google.Pubsub.V1.Subscription request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> CreateSubscriptionAsync(global::Google.Pubsub.V1.Subscription request, CallOptions options);
      global::Google.Pubsub.V1.Subscription GetSubscription(global::Google.Pubsub.V1.GetSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.Subscription GetSubscription(global::Google.Pubsub.V1.GetSubscriptionRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> GetSubscriptionAsync(global::Google.Pubsub.V1.GetSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> GetSubscriptionAsync(global::Google.Pubsub.V1.GetSubscriptionRequest request, CallOptions options);
      global::Google.Pubsub.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Pubsub.V1.ListSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Pubsub.V1.ListSubscriptionsRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Pubsub.V1.ListSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Pubsub.V1.ListSubscriptionsRequest request, CallOptions options);
      global::Google.Protobuf.Empty DeleteSubscription(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty DeleteSubscription(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteSubscriptionAsync(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteSubscriptionAsync(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, CallOptions options);
      global::Google.Protobuf.Empty ModifyAckDeadline(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty ModifyAckDeadline(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyAckDeadlineAsync(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyAckDeadlineAsync(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, CallOptions options);
      global::Google.Protobuf.Empty Acknowledge(global::Google.Pubsub.V1.AcknowledgeRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty Acknowledge(global::Google.Pubsub.V1.AcknowledgeRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> AcknowledgeAsync(global::Google.Pubsub.V1.AcknowledgeRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> AcknowledgeAsync(global::Google.Pubsub.V1.AcknowledgeRequest request, CallOptions options);
      global::Google.Pubsub.V1.PullResponse Pull(global::Google.Pubsub.V1.PullRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.PullResponse Pull(global::Google.Pubsub.V1.PullRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.PullResponse> PullAsync(global::Google.Pubsub.V1.PullRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.PullResponse> PullAsync(global::Google.Pubsub.V1.PullRequest request, CallOptions options);
      global::Google.Protobuf.Empty ModifyPushConfig(global::Google.Pubsub.V1.ModifyPushConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty ModifyPushConfig(global::Google.Pubsub.V1.ModifyPushConfigRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyPushConfigAsync(global::Google.Pubsub.V1.ModifyPushConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyPushConfigAsync(global::Google.Pubsub.V1.ModifyPushConfigRequest request, CallOptions options);
    }

    // server-side interface
    public interface ISubscriber
    {
      Task<global::Google.Pubsub.V1.Subscription> CreateSubscription(global::Google.Pubsub.V1.Subscription request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.Subscription> GetSubscription(global::Google.Pubsub.V1.GetSubscriptionRequest request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.ListSubscriptionsResponse> ListSubscriptions(global::Google.Pubsub.V1.ListSubscriptionsRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> DeleteSubscription(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> ModifyAckDeadline(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> Acknowledge(global::Google.Pubsub.V1.AcknowledgeRequest request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.PullResponse> Pull(global::Google.Pubsub.V1.PullRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> ModifyPushConfig(global::Google.Pubsub.V1.ModifyPushConfigRequest request, ServerCallContext context);
    }

    // client stub
    public class SubscriberClient : ClientBase, ISubscriberClient
    {
      public SubscriberClient(Channel channel) : base(channel)
      {
      }
      public global::Google.Pubsub.V1.Subscription CreateSubscription(global::Google.Pubsub.V1.Subscription request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Subscription CreateSubscription(global::Google.Pubsub.V1.Subscription request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateSubscription, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> CreateSubscriptionAsync(global::Google.Pubsub.V1.Subscription request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> CreateSubscriptionAsync(global::Google.Pubsub.V1.Subscription request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateSubscription, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Subscription GetSubscription(global::Google.Pubsub.V1.GetSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Subscription GetSubscription(global::Google.Pubsub.V1.GetSubscriptionRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetSubscription, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> GetSubscriptionAsync(global::Google.Pubsub.V1.GetSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Subscription> GetSubscriptionAsync(global::Google.Pubsub.V1.GetSubscriptionRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetSubscription, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Pubsub.V1.ListSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListSubscriptions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Pubsub.V1.ListSubscriptionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListSubscriptions, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Pubsub.V1.ListSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListSubscriptions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Pubsub.V1.ListSubscriptionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListSubscriptions, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteSubscription(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteSubscription(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteSubscription, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteSubscriptionAsync(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteSubscription, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteSubscriptionAsync(global::Google.Pubsub.V1.DeleteSubscriptionRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteSubscription, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty ModifyAckDeadline(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ModifyAckDeadline, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty ModifyAckDeadline(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ModifyAckDeadline, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyAckDeadlineAsync(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ModifyAckDeadline, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyAckDeadlineAsync(global::Google.Pubsub.V1.ModifyAckDeadlineRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ModifyAckDeadline, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty Acknowledge(global::Google.Pubsub.V1.AcknowledgeRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Acknowledge, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty Acknowledge(global::Google.Pubsub.V1.AcknowledgeRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Acknowledge, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> AcknowledgeAsync(global::Google.Pubsub.V1.AcknowledgeRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Acknowledge, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> AcknowledgeAsync(global::Google.Pubsub.V1.AcknowledgeRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Acknowledge, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.PullResponse Pull(global::Google.Pubsub.V1.PullRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Pull, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.PullResponse Pull(global::Google.Pubsub.V1.PullRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Pull, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.PullResponse> PullAsync(global::Google.Pubsub.V1.PullRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Pull, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.PullResponse> PullAsync(global::Google.Pubsub.V1.PullRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Pull, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty ModifyPushConfig(global::Google.Pubsub.V1.ModifyPushConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ModifyPushConfig, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty ModifyPushConfig(global::Google.Pubsub.V1.ModifyPushConfigRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ModifyPushConfig, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyPushConfigAsync(global::Google.Pubsub.V1.ModifyPushConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ModifyPushConfig, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> ModifyPushConfigAsync(global::Google.Pubsub.V1.ModifyPushConfigRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ModifyPushConfig, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(ISubscriber serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_CreateSubscription, serviceImpl.CreateSubscription)
          .AddMethod(__Method_GetSubscription, serviceImpl.GetSubscription)
          .AddMethod(__Method_ListSubscriptions, serviceImpl.ListSubscriptions)
          .AddMethod(__Method_DeleteSubscription, serviceImpl.DeleteSubscription)
          .AddMethod(__Method_ModifyAckDeadline, serviceImpl.ModifyAckDeadline)
          .AddMethod(__Method_Acknowledge, serviceImpl.Acknowledge)
          .AddMethod(__Method_Pull, serviceImpl.Pull)
          .AddMethod(__Method_ModifyPushConfig, serviceImpl.ModifyPushConfig).Build();
    }

    // creates a new client
    public static SubscriberClient NewClient(Channel channel)
    {
      return new SubscriberClient(channel);
    }

  }
  public static class Publisher
  {
    static readonly string __ServiceName = "google.pubsub.v1.Publisher";

    static readonly Marshaller<global::Google.Pubsub.V1.Topic> __Marshaller_Topic = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.Topic.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.PublishRequest> __Marshaller_PublishRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.PublishRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.PublishResponse> __Marshaller_PublishResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.PublishResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.GetTopicRequest> __Marshaller_GetTopicRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.GetTopicRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListTopicsRequest> __Marshaller_ListTopicsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListTopicsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListTopicsResponse> __Marshaller_ListTopicsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListTopicsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListTopicSubscriptionsRequest> __Marshaller_ListTopicSubscriptionsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListTopicSubscriptionsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> __Marshaller_ListTopicSubscriptionsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.ListTopicSubscriptionsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Pubsub.V1.DeleteTopicRequest> __Marshaller_DeleteTopicRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Pubsub.V1.DeleteTopicRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.Empty.Parser.ParseFrom);

    static readonly Method<global::Google.Pubsub.V1.Topic, global::Google.Pubsub.V1.Topic> __Method_CreateTopic = new Method<global::Google.Pubsub.V1.Topic, global::Google.Pubsub.V1.Topic>(
        MethodType.Unary,
        __ServiceName,
        "CreateTopic",
        __Marshaller_Topic,
        __Marshaller_Topic);

    static readonly Method<global::Google.Pubsub.V1.PublishRequest, global::Google.Pubsub.V1.PublishResponse> __Method_Publish = new Method<global::Google.Pubsub.V1.PublishRequest, global::Google.Pubsub.V1.PublishResponse>(
        MethodType.Unary,
        __ServiceName,
        "Publish",
        __Marshaller_PublishRequest,
        __Marshaller_PublishResponse);

    static readonly Method<global::Google.Pubsub.V1.GetTopicRequest, global::Google.Pubsub.V1.Topic> __Method_GetTopic = new Method<global::Google.Pubsub.V1.GetTopicRequest, global::Google.Pubsub.V1.Topic>(
        MethodType.Unary,
        __ServiceName,
        "GetTopic",
        __Marshaller_GetTopicRequest,
        __Marshaller_Topic);

    static readonly Method<global::Google.Pubsub.V1.ListTopicsRequest, global::Google.Pubsub.V1.ListTopicsResponse> __Method_ListTopics = new Method<global::Google.Pubsub.V1.ListTopicsRequest, global::Google.Pubsub.V1.ListTopicsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListTopics",
        __Marshaller_ListTopicsRequest,
        __Marshaller_ListTopicsResponse);

    static readonly Method<global::Google.Pubsub.V1.ListTopicSubscriptionsRequest, global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> __Method_ListTopicSubscriptions = new Method<global::Google.Pubsub.V1.ListTopicSubscriptionsRequest, global::Google.Pubsub.V1.ListTopicSubscriptionsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListTopicSubscriptions",
        __Marshaller_ListTopicSubscriptionsRequest,
        __Marshaller_ListTopicSubscriptionsResponse);

    static readonly Method<global::Google.Pubsub.V1.DeleteTopicRequest, global::Google.Protobuf.Empty> __Method_DeleteTopic = new Method<global::Google.Pubsub.V1.DeleteTopicRequest, global::Google.Protobuf.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteTopic",
        __Marshaller_DeleteTopicRequest,
        __Marshaller_Empty);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Pubsub.V1.Pubsub.Descriptor.Services[1]; }
    }

    // client interface
    public interface IPublisherClient
    {
      global::Google.Pubsub.V1.Topic CreateTopic(global::Google.Pubsub.V1.Topic request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.Topic CreateTopic(global::Google.Pubsub.V1.Topic request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.Topic> CreateTopicAsync(global::Google.Pubsub.V1.Topic request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.Topic> CreateTopicAsync(global::Google.Pubsub.V1.Topic request, CallOptions options);
      global::Google.Pubsub.V1.PublishResponse Publish(global::Google.Pubsub.V1.PublishRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.PublishResponse Publish(global::Google.Pubsub.V1.PublishRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.PublishResponse> PublishAsync(global::Google.Pubsub.V1.PublishRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.PublishResponse> PublishAsync(global::Google.Pubsub.V1.PublishRequest request, CallOptions options);
      global::Google.Pubsub.V1.Topic GetTopic(global::Google.Pubsub.V1.GetTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.Topic GetTopic(global::Google.Pubsub.V1.GetTopicRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.Topic> GetTopicAsync(global::Google.Pubsub.V1.GetTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.Topic> GetTopicAsync(global::Google.Pubsub.V1.GetTopicRequest request, CallOptions options);
      global::Google.Pubsub.V1.ListTopicsResponse ListTopics(global::Google.Pubsub.V1.ListTopicsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.ListTopicsResponse ListTopics(global::Google.Pubsub.V1.ListTopicsRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicsResponse> ListTopicsAsync(global::Google.Pubsub.V1.ListTopicsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicsResponse> ListTopicsAsync(global::Google.Pubsub.V1.ListTopicsRequest request, CallOptions options);
      global::Google.Pubsub.V1.ListTopicSubscriptionsResponse ListTopicSubscriptions(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Pubsub.V1.ListTopicSubscriptionsResponse ListTopicSubscriptions(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> ListTopicSubscriptionsAsync(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> ListTopicSubscriptionsAsync(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, CallOptions options);
      global::Google.Protobuf.Empty DeleteTopic(global::Google.Pubsub.V1.DeleteTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::Google.Protobuf.Empty DeleteTopic(global::Google.Pubsub.V1.DeleteTopicRequest request, CallOptions options);
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTopicAsync(global::Google.Pubsub.V1.DeleteTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTopicAsync(global::Google.Pubsub.V1.DeleteTopicRequest request, CallOptions options);
    }

    // server-side interface
    public interface IPublisher
    {
      Task<global::Google.Pubsub.V1.Topic> CreateTopic(global::Google.Pubsub.V1.Topic request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.PublishResponse> Publish(global::Google.Pubsub.V1.PublishRequest request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.Topic> GetTopic(global::Google.Pubsub.V1.GetTopicRequest request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.ListTopicsResponse> ListTopics(global::Google.Pubsub.V1.ListTopicsRequest request, ServerCallContext context);
      Task<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> ListTopicSubscriptions(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, ServerCallContext context);
      Task<global::Google.Protobuf.Empty> DeleteTopic(global::Google.Pubsub.V1.DeleteTopicRequest request, ServerCallContext context);
    }

    // client stub
    public class PublisherClient : ClientBase, IPublisherClient
    {
      public PublisherClient(Channel channel) : base(channel)
      {
      }
      public global::Google.Pubsub.V1.Topic CreateTopic(global::Google.Pubsub.V1.Topic request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Topic CreateTopic(global::Google.Pubsub.V1.Topic request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateTopic, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Topic> CreateTopicAsync(global::Google.Pubsub.V1.Topic request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Topic> CreateTopicAsync(global::Google.Pubsub.V1.Topic request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateTopic, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.PublishResponse Publish(global::Google.Pubsub.V1.PublishRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Publish, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.PublishResponse Publish(global::Google.Pubsub.V1.PublishRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Publish, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.PublishResponse> PublishAsync(global::Google.Pubsub.V1.PublishRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_Publish, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.PublishResponse> PublishAsync(global::Google.Pubsub.V1.PublishRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_Publish, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Topic GetTopic(global::Google.Pubsub.V1.GetTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.Topic GetTopic(global::Google.Pubsub.V1.GetTopicRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetTopic, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Topic> GetTopicAsync(global::Google.Pubsub.V1.GetTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.Topic> GetTopicAsync(global::Google.Pubsub.V1.GetTopicRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetTopic, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListTopicsResponse ListTopics(global::Google.Pubsub.V1.ListTopicsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTopics, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListTopicsResponse ListTopics(global::Google.Pubsub.V1.ListTopicsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTopics, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicsResponse> ListTopicsAsync(global::Google.Pubsub.V1.ListTopicsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTopics, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicsResponse> ListTopicsAsync(global::Google.Pubsub.V1.ListTopicsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTopics, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListTopicSubscriptionsResponse ListTopicSubscriptions(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTopicSubscriptions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Pubsub.V1.ListTopicSubscriptionsResponse ListTopicSubscriptions(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTopicSubscriptions, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> ListTopicSubscriptionsAsync(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_ListTopicSubscriptions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Pubsub.V1.ListTopicSubscriptionsResponse> ListTopicSubscriptionsAsync(global::Google.Pubsub.V1.ListTopicSubscriptionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_ListTopicSubscriptions, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteTopic(global::Google.Pubsub.V1.DeleteTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::Google.Protobuf.Empty DeleteTopic(global::Google.Pubsub.V1.DeleteTopicRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteTopic, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTopicAsync(global::Google.Pubsub.V1.DeleteTopicRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_DeleteTopic, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::Google.Protobuf.Empty> DeleteTopicAsync(global::Google.Pubsub.V1.DeleteTopicRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_DeleteTopic, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(IPublisher serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_CreateTopic, serviceImpl.CreateTopic)
          .AddMethod(__Method_Publish, serviceImpl.Publish)
          .AddMethod(__Method_GetTopic, serviceImpl.GetTopic)
          .AddMethod(__Method_ListTopics, serviceImpl.ListTopics)
          .AddMethod(__Method_ListTopicSubscriptions, serviceImpl.ListTopicSubscriptions)
          .AddMethod(__Method_DeleteTopic, serviceImpl.DeleteTopic).Build();
    }

    // creates a new client
    public static PublisherClient NewClient(Channel channel)
    {
      return new PublisherClient(channel);
    }

  }
}
#endregion
